import { TcombRequest, TcombWebhookResponse, TcombUpdate } from '../runtime-types/types';
import { CurriedFunction2 } from 'ramda';
export interface SinkPayload {
    [s: string]: any;
}
export declare let webhook: (update: TcombUpdate) => TcombWebhookResponse;
export declare let setWebhook: (options?: any) => TcombRequest;
export declare let getWebhookInfo: (options?: any) => TcombRequest;
export declare let getMe: (options?: any) => TcombRequest;
export declare let broadcast: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let reply: CurriedFunction2<string | SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let forwardMessage: CurriedFunction2<number | SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendPhoto: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendAudio: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendDocument: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendSticker: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendVideo: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendVoice: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendLocation: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendVenue: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendContact: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let sendChatAction: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let getUserProfilePhotos: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let getFile: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let kickChatMember: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let leaveChat: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let unbanChatMember: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let getChat: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let getChatAdministrators: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let getChatMembersCount: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let getChatMember: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let answerCallbackQuery: CurriedFunction2<any, {} | TcombUpdate, TcombRequest>;
export declare let editMessageText: CurriedFunction2<any, {} | TcombUpdate, TcombRequest>;
export declare let editMessageCaption: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let editMessageReplyMarkup: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let answerInlineQuery: CurriedFunction2<any, {} | TcombUpdate, TcombRequest>;
export declare let sendGame: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let setGameScore: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
export declare let getGameHighScores: CurriedFunction2<SinkPayload, {} | TcombUpdate, TcombRequest>;
